---
- name: Ensure packages exist
  package:
    name: "{{ item }}"
    state: present
  become: true
  loop:
    - python3
    - python3-pip
    - python3-kubernetes
    - python3-yaml
    - python3-jsonpatch
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
  when: ansible_os_family == 'Debian'

- name: Add cert-manager helm repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: "https://charts.jetstack.io"
    state: present

- name: wait for k3s API server VIP {{ apiserver_endpoint }} to be available
  wait_for:
    host: "{{ apiserver_endpoint }}"
    port: 6443
    delay: 10

- name: apply cert-manager CRDs
  kubernetes.core.k8s:
    state: present
    src: "https://github.com/jetstack/cert-manager/releases/download/{{ cert_manager_ver }}/cert-manager.crds.yaml"

- name: create cert-manager namespace
  kubernetes.core.k8s:
    name: cert-manager
    api_version: v1
    kind: Namespace
    state: present

- name: apply cert-manager internal-ca configmap
  kubernetes.core.k8s:
    state: present
    template: 'internal-ca.yaml.j2'
  when: use_internal_ca | bool

- name: deploy cert-manager {{ cert_manager_ver }} using helm with internal CA
  kubernetes.core.helm:
    name: cert-manager
    namespace: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_ver }}"
    values: "{{ lookup('template', 'values.yaml.j2') | from_yaml }}"
    update_repo_cache: true
    wait: yes
  when: use_internal_ca | bool

- name: deploy cert-manager {{ cert_manager_ver }} using helm without internal CA
  kubernetes.core.helm:
    name: cert-manager
    namespace: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_ver }}"
    update_repo_cache: true
    force: true
    # set_values: 
    #   - value: extraArgs="'{--dns01-recursive-nameservers-only,--dns01-self-check-nameservers=8.8.8.8:53\\,1.1.1.1:53}'"
    #   - value_type: string
    wait: yes
  when: not use_internal_ca | bool

- name: create internal CA issuer
  kubernetes.core.k8s:
    state: present
    template: 'ca-issuer.yaml.j2'
  when: use_internal_ca | bool